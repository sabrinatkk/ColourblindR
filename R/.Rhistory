theme_deutera <-function(){
#' @description: theme_deutera() reformats a matplotlib plot with a Deuteranopia friendly colour palette and theme
#' Use it in conjuction with ggplot2
#'
#' @usage: ggplot(data, aes(variable x, variable y)) + geom_point() + theme_deutera()
#'
#' @details: Create your plot via ggplot2 and apply our theme to enhance plots to be more readable for colourblind viewers
#'
#' @return reformatted plot for deuteranopia vision
return(NULL)
}
devtools::document()
devtools::document()
library(ggplot2)
library(testthat)
test_plot<- ggplot(diamonds, aes(x = depth, y = price, colour = cut)) +
geom_point(alpha = 0.5) + theme_deutera()
test_build <- ggplot_build(test_plot)
test_that('Theme is correct',
expect_true(test_plot$theme$panel.background$fill == 'white'),
expect_true(test_plot$theme$panel.background$colour == 'lightgrey'),
expect_true(test_plot$theme$plot.title$size == 20),
expect_true(test_plot$theme$axis.text$size == 13),
expect_true(test_plot$theme$axis.title$size ==  16),
expect_true(test_plot$theme$panel.grid.minor == element_blank()),
expect_false(test_plot$theme$panel.grid.major== element_blank()),
expect_false(test_plot$theme$legend.position == 'top'),
expect_true(length(unique(test_build$data[[1]]$colour)) == 5))
library(ggplot2)
library(testthat)
test_plot<- ggplot(diamonds, aes(x = depth, y = price, colour = cut)) +
geom_point(alpha = 0.5) + theme_deutera()
test_build <- ggplot_build(test_plot)
test_that('Theme is correct',
expect_true(test_plot$theme$panel.background$fill == 'white'),
expect_true(test_plot$theme$panel.background$colour == 'lightgrey'),
expect_true(test_plot$theme$plot.title$size == 20),
expect_true(test_plot$theme$axis.text$size == 13),
expect_true(test_plot$theme$axis.title$size ==  16),
expect_true(test_plot$theme$panel.grid.minor == element_blank()),
expect_false(test_plot$theme$panel.grid.major== element_blank()),
expect_false(test_plot$theme$legend.position == 'top'),
expect_true(length(unique(test_build$data[[1]]$colour)) == 5))
devtools::document()
